{"version":3,"sources":["components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["TodoInfo","todo","id","className","completed","title","href","userId","TodoList","todos","map","name","username","email","App","useState","todosFromServer","setTodos","setTitle","setUserId","userError","setUserError","titleError","setTitleError","onSubmit","event","preventDefault","newTodo","Math","max","parseInt","type","value","onChange","target","placeholder","disabled","usersFromServer","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ffb8b20.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Todo {\n  id: number;\n  title: string;\n  userId: number;\n  completed: boolean;\n}\n\ninterface TodoInfoProps {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n      <a className=\"UserInfo\" href={`mailto:user${todo.userId}@example.com`}>\n        {`User ${todo.userId}`}\n      </a>\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Todo {\n  id: number;\n  title: string;\n  userId: number;\n  completed: boolean;\n}\n\ninterface TodoListProps {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('');\n  const [userError, setUserError] = useState('');\n  const [titleError, setTitleError] = useState('');\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError('');\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(event.target.value);\n    setUserError('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!userId) {\n      setUserError('Please choose a user');\n    }\n\n    if (!title) {\n      setTitleError('Please enter a title');\n    }\n\n    if (userId && title) {\n      const newTodo = {\n        id: Math.max(...todos.map((todo) => todo.id)) + 1,\n        title,\n        userId: parseInt(userId, 10),\n        completed: false,\n      };\n\n      setTodos([...todos, newTodo]);\n      setTitle('');\n      setUserId('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            value={title}\n            onChange={handleTitleChange}\n            data-cy=\"titleInput\"\n            placeholder=\"Enter title\"\n          />\n          <span className=\"error\">{titleError}</span>\n        </div>\n\n        <div className=\"field\">\n          <select\n            value={userId}\n            onChange={handleUserChange}\n            data-cy=\"userSelect\"\n          >\n            <option value=\"\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          <span className=\"error\">{userError}</span>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}